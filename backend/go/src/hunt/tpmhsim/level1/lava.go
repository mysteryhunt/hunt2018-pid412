package level1

const lavaNever = -2
const lavaAlways = -1
const platCycleLen = 8

var lavaMap = [30][30]int8{
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, 0, 1, 2, 3, 4, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -2, 3, 3, -1, -1, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -1, -1, -1, -1, 5, 6, 7, 0, 1, -1, -1, -1, -2, -2, -2, -2, -2, -2, -1, 5, 6, -1, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -1, -1, 2, 3, 4, 5, 6, -2, -2, -2, -2, -2, -1, -1, -1, 1, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -1, -1, -1, -1, 5, 6, 7, 0, 1, -1, -1, -1, -1, -2, -2, -2, -2, -2, 2, 4, -1, -1, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, 0, 1, 2, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -1, 6, 7, -1, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -2, -2, -1, -1, 5, 0, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -2, -2, -1, 3, 4, -1, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 2, -1, 1, -1, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, 6, 2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 2, 6, -1, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -1, -1, -1, -1, -1, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 1, -2, 6, -2, 3, -2, 0, -2, 4, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
	[30]int8{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2},
}

func squareIsLava(x int8, y int8, t int) bool {
	square := lavaMap[y][x]
	if square == lavaNever {
		return false
	} else if square == lavaAlways {
		return true
	}

	return (((t - int(square)) + platCycleLen) % platCycleLen) >= platCycleLen/2
}
